"""Update PackingList model and add PackingListItem model

Revision ID: 9a0e6cbdda39
Revises: 3dbbbb0304fe
Create Date: 2024-07-31 17:38:23.258860

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9a0e6cbdda39'
down_revision = '3dbbbb0304fe'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # Add the 'list_name' column as nullable first:
    with op.batch_alter_table('packing_list', schema=None) as batch_op:
        batch_op.add_column(sa.Column('list_name', sa.String(length=100), nullable=True))

        # Drop old columns that will be replaced:
        batch_op.drop_column('quantity')
        batch_op.drop_column('item_name')
        batch_op.drop_column('is_packed')

    # ### end Alembic commands ###

    # Update existing rows with default values for new column so all rows have a value (not NULL values):
    op.execute('UPDATE packing_list SET list_name = \'default_value\'')

    # Turn 'list_name' column back to non-nullable:
    with op.batch_alter_table('packing_list', schema=None) as batch_op:
        batch_op.alter_column('list_name', existing_type=sa.String(length=100), nullable=False)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # If rolling back, add the columns back with original properties:
    with op.batch_alter_table('packing_list', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_packed', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('item_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('quantity', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False))
        
        # Drop the 'list_name' column:
        batch_op.drop_column('list_name')

    # ### end Alembic commands ###
